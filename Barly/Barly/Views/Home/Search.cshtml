@using Barly.Business;
@model Barly.Models.SearchResultModel
@{
    ViewBag.Title = "Barly - Recherche";
}

<main class="mdl-layout__content home">
    <div class="search-content map">
        <button id="maplistTrigger" class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
            <i class="material-icons">list</i>
        </button>
        <div id="bar-map"></div>
        <div id="bar-list" class="mdl-grid">
            @foreach (Location location in Model.Locations)
            {
                <div data-id="@location.Id" class="bar mdl-card mdl-shadow--2dp mdl-cell mdl-cell--2-col mdl-cell--4-col-tablet mdl-cell--12-col-phone">
                    <div class="mdl-card__title" style="background: url('@location.Picture') center / cover;">
                        <h2 class="mdl-card__title-text">@location.Name</h2>
                    </div>
                    <div class="mdl-card__supporting-text">
                        @Html.Raw(location.Schedule)
                    </div>
                    <div class="closer mdl-card__supporting-text mdl-card--border">
                        @Html.Raw(location.Address)<br />
                    </div>
                    <div class="mdl-card__actions mdl-card--border">
                        <a class="opener mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect" onclick="$('.bar[data-id=@location.Id]').addClass('open');">
                            Ouvrir
                        </a>
                        <a class="closer mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect" onclick="$('.bar[data-id=@location.Id]').removeClass('open');">
                            Fermer
                        </a>
                    </div>
                    <div class="mdl-card__menu">
                        <a class="share-button mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-effect" href="http://www.facebook.com/sharer/sharer.php?u=@Uri.EscapeDataString("http://" + Request.Url.Host + "/Home/SearchFromBarId?id=" + location.Id)&title=@Uri.EscapeDataString("Barly - " + @location.Name)" target="_blank">
                            <i class="material-icons">share</i>
                        </a>
                    </div>
                </div>

                <a href="geo:@location.Latitude,@location.Longitude;u=35" class="btn btn-default"><i class="glyphicon glyphicon-map-marker"></i></a>

            }
        </div>
    </div>
    <script>
        $(function(){
            $('#maplistTrigger').click(function(){
                $('.search-content').toggleClass('map');
                $('.search-content').toggleClass('list');

                if ($('.search-content').hasClass('list')){
                    $('#maplistTrigger .material-icons').text('map');
                } else {
                    $('#maplistTrigger .material-icons').text('list');
                }
            });
        });
        var locations = [
            @foreach (Location location in Model.Locations)
        {
        <text>{
                Id: @location.Id,
                Name: "@location.Name",
                Schedule: "@Html.Raw(location.Schedule)",
                Picture: "@location.Picture",
                Address: "@location.Address",
                Latitude: @location.Latitude.ToString(System.Globalization.CultureInfo.InvariantCulture),
                Longitude: @location.Longitude.ToString(System.Globalization.CultureInfo.InvariantCulture),
            },</text>
        }
        ];
        //console.log(locations);

        function initializeMap() {
            var mapStyle = [{ "featureType": "landscape", "stylers": [{ "hue": "#FFBB00" }, { "saturation": 43.400000000000006 }, { "lightness": 37.599999999999994 }, { "gamma": 1 }] }, { "featureType": "road.highway", "stylers": [{ "hue": "#FFC200" }, { "saturation": -61.8 }, { "lightness": 45.599999999999994 }, { "gamma": 1 }] }, { "featureType": "road.arterial", "stylers": [{ "hue": "#FF0300" }, { "saturation": -100 }, { "lightness": 51.19999999999999 }, { "gamma": 1 }] }, { "featureType": "road.local", "stylers": [{ "hue": "#FF0300" }, { "saturation": -100 }, { "lightness": 52 }, { "gamma": 1 }] }, { "featureType": "water", "stylers": [{ "hue": "#0078FF" }, { "saturation": -13.200000000000003 }, { "lightness": 2.4000000000000057 }, { "gamma": 1 }] }, { "featureType": "poi", "stylers": [{ "hue": "#00FF6A" }, { "saturation": -1.0989010989011234 }, { "lightness": 11.200000000000017 }, { "gamma": 1 }] }];

            var mapOptions = {
                zoom: 3,
                styles: mapStyle
            };
            var map = new google.maps.Map(document.getElementById('bar-map'), mapOptions);
            //create empty LatLngBounds object
            var bounds = new google.maps.LatLngBounds();
            var infowindow = new google.maps.InfoWindow();

            for (i = 0; i < locations.length; i++) {
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(locations[i].Latitude, locations[i].Longitude),
                    map: map
                });

                //extend the bounds to include each marker's position
                bounds.extend(marker.position);

                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent(locations[i].Name);
                        infowindow.open(map, marker);
                        $('.bar[data-id="'+locations[i].Id+'"]').addClass('open');
                    }
                })(marker, i));
            }

            //now fit the map to the newly inclusive bounds
            map.fitBounds(bounds);

        }
    </script>

    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js"></script>
    <script>
        google.maps.event.addDomListener(window, 'load', initializeMap);
    </script>
</main>