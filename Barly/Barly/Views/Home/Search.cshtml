@using Barly.Business;
@model Barly.Models.SearchResultModel
@{
    ViewBag.Title = "Barly - Recherche";
}
<div class="row">
    <div class="col-sm-12">
        <div id="map-canvas"></div>
    </div>
</div>
<hr />
<div class="row">
    @foreach (Location location in Model.Locations)
    {
        <div class="col-sm-4 col-md-3">
            <div class="thumbnail">
                <img src="@location.Picture" alt="photo du bar @location.Name">
                <div class="caption">
                    <h3>@location.Name</h3>
                    <p>@Html.Raw(location.Schedule)</p>
                </div>
            </div>
        </div>
    }
</div>
<style type="text/css">
    html, body {
        height: 100%;
    }

    #map-canvas {
        width: 100%;
        height: 400px;
        margin: 0;
        padding: 0;
    }

    .thumbnail img {
        max-height: 200px;
    }
</style>

<script>
    var locations = [
        @foreach (Location location in Model.Locations)
        {
        <text>{
            Id: @location.Id,
            Name: "@location.Name",
            Schedule: "@location.Schedule",
            Picture: "@location.Picture",
            Address: "@location.Address",
            Latitude: @location.Latitude.ToString(System.Globalization.CultureInfo.InvariantCulture),
            Longitude: @location.Longitude.ToString(System.Globalization.CultureInfo.InvariantCulture),
        },</text>
        }
    ];
    //console.log(locations);

    function initializeMap() {
        var mapStyle = [{ "featureType": "landscape", "stylers": [{ "hue": "#FFBB00" }, { "saturation": 43.400000000000006 }, { "lightness": 37.599999999999994 }, { "gamma": 1 }] }, { "featureType": "road.highway", "stylers": [{ "hue": "#FFC200" }, { "saturation": -61.8 }, { "lightness": 45.599999999999994 }, { "gamma": 1 }] }, { "featureType": "road.arterial", "stylers": [{ "hue": "#FF0300" }, { "saturation": -100 }, { "lightness": 51.19999999999999 }, { "gamma": 1 }] }, { "featureType": "road.local", "stylers": [{ "hue": "#FF0300" }, { "saturation": -100 }, { "lightness": 52 }, { "gamma": 1 }] }, { "featureType": "water", "stylers": [{ "hue": "#0078FF" }, { "saturation": -13.200000000000003 }, { "lightness": 2.4000000000000057 }, { "gamma": 1 }] }, { "featureType": "poi", "stylers": [{ "hue": "#00FF6A" }, { "saturation": -1.0989010989011234 }, { "lightness": 11.200000000000017 }, { "gamma": 1 }] }];

        var mapOptions = {
            zoom: 3,
            styles: mapStyle
        };
        var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        //create empty LatLngBounds object
        var bounds = new google.maps.LatLngBounds();
        var infowindow = new google.maps.InfoWindow();

        for (i = 0; i < locations.length; i++) {
            var marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i].Latitude, locations[i].Longitude),
                map: map
            });

            //extend the bounds to include each marker's position
            bounds.extend(marker.position);

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infowindow.setContent(locations[i].Name);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }

        //now fit the map to the newly inclusive bounds
        map.fitBounds(bounds);

    }
</script>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js"></script>
<script>
    google.maps.event.addDomListener(window, 'load', initializeMap);
</script>
